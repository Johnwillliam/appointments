{"version":3,"sources":["webpack:///editor-shortcodes.js","webpack:///webpack/bootstrap 4c834a842219c72e652e?199f","webpack:///./_src/admin/js/editor-shortcodes.dev.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","4","tinymce","PluginManager","add","editor","appointments_shortcode_item","shortcode","field","body","defaults","appointments_shortcode_field","push","text","onclick","windowManager","open","title","onsubmit","appointments_shortcode_on_submit","id","definition","type","label","this","_id","element","jQuery","datepickers","indexOf","length","datepicker","AppointmentsDateSettings","weekStart","values","options","checked","help","tooltip","e","atts","data","insertContent","registeredShortcodes","ed","activeEditor","app_menu","getLang","short","addButton","menu"],"mappings":"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","file":"editor-shortcodes.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 4:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n( function () {\r\n\r\n    tinymce.PluginManager.add( 'appointments_shortcodes', function ( editor ) {\r\n\r\n        var datepickers = [];\r\n\r\n        /**\r\n         * Generate the content for a shortcode popup\r\n         *\r\n         * @param shortcode\r\n         * @returns {{text: *, onclick: onclick}}\r\n         */\r\n        function appointments_shortcode_item( shortcode ) {\r\n            var body = [],\r\n                field;\r\n\r\n            for ( var i in shortcode.defaults ) {\r\n                field = appointments_shortcode_field( i, shortcode.defaults[i] );\r\n                if ( field ) {\r\n                    body.push( field );\r\n                }\r\n            }\r\n\r\n            return {\r\n                text: shortcode.name,\r\n                onclick: function () {\r\n                    editor.windowManager.open({\r\n                        title: shortcode.name,\r\n                        body: body,\r\n                        onsubmit: appointments_shortcode_on_submit( shortcode )\r\n                    });\r\n                }\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Generates a single field for Editor popup\r\n         *\r\n         * @param id\r\n         * @param definition\r\n         * @returns {boolean}\r\n         */\r\n        function appointments_shortcode_field( id, definition ) {\r\n            var field = {};\r\n            switch ( definition.type ) {\r\n                case 'text': {\r\n                    field = {\r\n                        type: 'textbox',\r\n                        name: id,\r\n                        label: definition.name,\r\n                        value: definition.value\r\n                    };\r\n                    break;\r\n                }\r\n                case 'datepicker': {\r\n                    field = {\r\n                        type: 'textbox',\r\n                        name: id,\r\n                        label: definition.name,\r\n                        value: definition.value,\r\n                        onclick: function() {\r\n                            var id = this._id;\r\n                            var element = jQuery( '#' + id );\r\n                            if ( datepickers.indexOf( id ) < 0 ) {\r\n                                // Initialize Datepicker\r\n                                datepickers.push( id );\r\n                                if ( ! element.length || typeof element.datepicker === 'undefined' ) {\r\n                                    return;\r\n                                }\r\n\r\n                                element.datepicker();\r\n                                element.datepicker( \"option\", \"dateFormat\", 'yy-mm-dd' );\r\n                                element.datepicker( \"option\", \"firstDay\", AppointmentsDateSettings.weekStart );\r\n                            }\r\n\r\n                            if ( typeof element.datepicker === 'function' ) {\r\n                                element.datepicker( 'show' );\r\n                            }\r\n\r\n                        }\r\n                    };\r\n                    break;\r\n                }\r\n                case 'select': {\r\n                    field = {\r\n                        type: 'listbox',\r\n                        name: id,\r\n                        label: definition.name,\r\n                        values: definition.options\r\n                    };\r\n                    break;\r\n                }\r\n                case 'checkbox': {\r\n                    field = {\r\n                        type: 'checkbox',\r\n                        name: id,\r\n                        label: definition.name,\r\n                        value: 1\r\n                    };\r\n\r\n                    if ( definition.value ) {\r\n                        field.checked = true;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if ( definition.help ) {\r\n                field.tooltip = definition.help\r\n            }\r\n\r\n            return field;\r\n        }\r\n\r\n        /**\r\n         * Generates the onSubmit action for a group of fields\r\n         *\r\n         * @param shortcode\r\n         * @returns {Function}\r\n         */\r\n        function appointments_shortcode_on_submit( shortcode ) {\r\n            return function( e ) {\r\n                var atts = '';\r\n                var value;\r\n                for ( var i in shortcode.defaults ) {\r\n                    if ( typeof e.data[ i ] !== 'undefined' && shortcode.defaults[i].value != e.data[i] ) {\r\n                        value = e.data[i];\r\n                        if ( 'checkbox' === shortcode.defaults[i].type ) {\r\n                            value = value ? 1 : 0;\r\n                        }\r\n                        atts += ' ' + i + '=\"' + value + '\"';\r\n                    }\r\n                }\r\n                editor.insertContent( '[' + shortcode.shortcode + atts + ']' );\r\n            }\r\n        }\r\n\r\n        var ed = tinymce.activeEditor,\r\n            shortcode,\r\n            registeredShortcodes;\r\n\r\n        var app_menu = [];\r\n\r\n\r\n\r\n        registeredShortcodes = ed.getLang( 'appointments_shortcodes.shortcodes' );\r\n\r\n        for ( var i in registeredShortcodes ) {\r\n            shortcode = registeredShortcodes[i];\r\n\r\n            app_menu.push((function (short) {\r\n                return appointments_shortcode_item(short);\r\n            })(shortcode));\r\n        }\r\n\r\n\r\n\r\n        editor.addButton( 'appointments_shortcodes', {\r\n            text: ed.getLang( 'appointments_shortcodes.label' ),\r\n            type: 'menubutton',\r\n            menu: app_menu\r\n        });\r\n    });\r\n})();\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// editor-shortcodes.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4c834a842219c72e652e","\"use strict\";\r\n( function () {\r\n\r\n    tinymce.PluginManager.add( 'appointments_shortcodes', function ( editor ) {\r\n\r\n        var datepickers = [];\r\n\r\n        /**\r\n         * Generate the content for a shortcode popup\r\n         *\r\n         * @param shortcode\r\n         * @returns {{text: *, onclick: onclick}}\r\n         */\r\n        function appointments_shortcode_item( shortcode ) {\r\n            var body = [],\r\n                field;\r\n\r\n            for ( var i in shortcode.defaults ) {\r\n                field = appointments_shortcode_field( i, shortcode.defaults[i] );\r\n                if ( field ) {\r\n                    body.push( field );\r\n                }\r\n            }\r\n\r\n            return {\r\n                text: shortcode.name,\r\n                onclick: function () {\r\n                    editor.windowManager.open({\r\n                        title: shortcode.name,\r\n                        body: body,\r\n                        onsubmit: appointments_shortcode_on_submit( shortcode )\r\n                    });\r\n                }\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Generates a single field for Editor popup\r\n         *\r\n         * @param id\r\n         * @param definition\r\n         * @returns {boolean}\r\n         */\r\n        function appointments_shortcode_field( id, definition ) {\r\n            var field = {};\r\n            switch ( definition.type ) {\r\n                case 'text': {\r\n                    field = {\r\n                        type: 'textbox',\r\n                        name: id,\r\n                        label: definition.name,\r\n                        value: definition.value\r\n                    };\r\n                    break;\r\n                }\r\n                case 'datepicker': {\r\n                    field = {\r\n                        type: 'textbox',\r\n                        name: id,\r\n                        label: definition.name,\r\n                        value: definition.value,\r\n                        onclick: function() {\r\n                            var id = this._id;\r\n                            var element = jQuery( '#' + id );\r\n                            if ( datepickers.indexOf( id ) < 0 ) {\r\n                                // Initialize Datepicker\r\n                                datepickers.push( id );\r\n                                if ( ! element.length || typeof element.datepicker === 'undefined' ) {\r\n                                    return;\r\n                                }\r\n\r\n                                element.datepicker();\r\n                                element.datepicker( \"option\", \"dateFormat\", 'yy-mm-dd' );\r\n                                element.datepicker( \"option\", \"firstDay\", AppointmentsDateSettings.weekStart );\r\n                            }\r\n\r\n                            if ( typeof element.datepicker === 'function' ) {\r\n                                element.datepicker( 'show' );\r\n                            }\r\n\r\n                        }\r\n                    };\r\n                    break;\r\n                }\r\n                case 'select': {\r\n                    field = {\r\n                        type: 'listbox',\r\n                        name: id,\r\n                        label: definition.name,\r\n                        values: definition.options\r\n                    };\r\n                    break;\r\n                }\r\n                case 'checkbox': {\r\n                    field = {\r\n                        type: 'checkbox',\r\n                        name: id,\r\n                        label: definition.name,\r\n                        value: 1\r\n                    };\r\n\r\n                    if ( definition.value ) {\r\n                        field.checked = true;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if ( definition.help ) {\r\n                field.tooltip = definition.help\r\n            }\r\n\r\n            return field;\r\n        }\r\n\r\n        /**\r\n         * Generates the onSubmit action for a group of fields\r\n         *\r\n         * @param shortcode\r\n         * @returns {Function}\r\n         */\r\n        function appointments_shortcode_on_submit( shortcode ) {\r\n            return function( e ) {\r\n                var atts = '';\r\n                var value;\r\n                for ( var i in shortcode.defaults ) {\r\n                    if ( typeof e.data[ i ] !== 'undefined' && shortcode.defaults[i].value != e.data[i] ) {\r\n                        value = e.data[i];\r\n                        if ( 'checkbox' === shortcode.defaults[i].type ) {\r\n                            value = value ? 1 : 0;\r\n                        }\r\n                        atts += ' ' + i + '=\"' + value + '\"';\r\n                    }\r\n                }\r\n                editor.insertContent( '[' + shortcode.shortcode + atts + ']' );\r\n            }\r\n        }\r\n\r\n        var ed = tinymce.activeEditor,\r\n            shortcode,\r\n            registeredShortcodes;\r\n\r\n        var app_menu = [];\r\n\r\n\r\n\r\n        registeredShortcodes = ed.getLang( 'appointments_shortcodes.shortcodes' );\r\n\r\n        for ( var i in registeredShortcodes ) {\r\n            shortcode = registeredShortcodes[i];\r\n\r\n            app_menu.push((function (short) {\r\n                return appointments_shortcode_item(short);\r\n            })(shortcode));\r\n        }\r\n\r\n\r\n\r\n        editor.addButton( 'appointments_shortcodes', {\r\n            text: ed.getLang( 'appointments_shortcodes.label' ),\r\n            type: 'menubutton',\r\n            menu: app_menu\r\n        });\r\n    });\r\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/editor-shortcodes.dev.js\n// module id = 4\n// module chunks = 1"],"sourceRoot":""}