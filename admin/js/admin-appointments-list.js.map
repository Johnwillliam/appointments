{"version":3,"sources":["webpack:///admin-appointments-list.js","webpack:///webpack/bootstrap 4c834a842219c72e652e?199f****","webpack:///./_src/admin/js/admin-appointments-list.dev.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","AppointmentsAdmin","window","global","strings","$","AppointmentsList","options","toggle_selected_export","length","show","hide","defaults","servicesPrice","this","extend","isEditing","$exportButton","$addNew","$addNewSpinner","$editAppointment","$table","click","e","confirm","deleteRecordsConfirm","removeActiveEditorForms","showEditorForm","result","prepend","bind","appId","target","data","row","$spinner","find","after","on","val","parents","saveEditor","fetchWorkerHours","button","$form","closest","checkedApps","type","is","each","append","attr","toggle","document","app_id","callback","action","col_len","columns","nonce","nonces","addNew","post","ajaxurl","response","error","alert","initDatepicker","unexpectedError","datepicker","dateFormat","firstDay","AppointmentsDateSettings","weekStart","$select","$worker_id","$parent","$app_id","$location","$slots_list","$selected_slot","$unknown_slot","children","editApp","worker_id","selected_slot","location_id","error_msg","html","delay","fadeOut","slots","JSON","parse","message","empty","text","key","$button","fields","map","fieldName","cancel_button","resend","trigger","parseInt","location","reload","innerHTML","appointmentsList","Appi18n","jQuery"],"mappings":"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","file":"admin-appointments-list.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nAppointmentsAdmin = window.AppointmentsAdmin || {};\r\n( function( global, strings, $ ) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param options\r\n     * @returns {AppointmentsList}\r\n     * @constructor\r\n     */\r\n    function AppointmentsList( options ) {\r\n        // Set default options array\r\n        var defaults = {\r\n            servicesPrice: []\r\n        };\r\n        this.options = $.extend( {}, defaults, options );\r\n\r\n        this.isEditing = false;\r\n\r\n        // Export button\r\n        this.$exportButton = $('.app-export_trigger');\r\n\r\n        // Add new appointment button\r\n        this.$addNew = $(\".add-new-h2\");\r\n        this.$addNewSpinner = $(\".add-new-waiting\");\r\n\r\n        // Edit single appointment\r\n        this.$editAppointment = $(\".app-inline-edit\");\r\n\r\n        // App list table\r\n        this.$table = $('table.appointments');\r\n\r\n        // Confirm removal of selected appointments\r\n        $(\"#delete_removed\").click( function(e) {\r\n            return confirm(strings.deleteRecordsConfirm);\r\n        });\r\n\r\n        // Show inline editor when add new button is clicked\r\n        this.$addNew.click( function() {\r\n            this.$addNewSpinner.show();\r\n            this.removeActiveEditorForms();\r\n            this.showEditorForm( 0, function( result ) {\r\n                this.$table.prepend(result);\r\n                this.$addNewSpinner.hide();\r\n            });\r\n        }.bind( this ) );\r\n\r\n        // Show inline editor when editing a single appointment\r\n        this.$editAppointment.click(function(e) {\r\n            var appId = $(e.target).data( 'app-id' );\r\n            var row = $('#app-' + appId );\r\n            var $spinner = row.find(\".waiting\");\r\n\r\n            $spinner.show();\r\n\r\n            this.removeActiveEditorForms();\r\n\r\n            this.showEditorForm( appId, function( result ) {\r\n                $spinner.hide();\r\n                row.hide();\r\n                row.after( result );\r\n            });\r\n        }.bind(this));\r\n\r\n        // Cancel edition in inline editor\r\n        this.$table.on( 'click', '.cancel', this.removeActiveEditorForms.bind(this) );\r\n\r\n        // Change service price as selection changes\r\n        this.$table.on( 'change', 'select[name=\"service\"]', function(e) {\r\n            var target = $(e.target);\r\n            var value = target.val();\r\n            if ( this.options.servicesPrice[ value ] ) {\r\n                target.parents(\".inline-edit-col\")\r\n                    .find( 'input[name=\"price\"]' )\r\n                    .val( this.options.servicesPrice[ value ] );\r\n            }\r\n        }.bind(this));\r\n\r\n        this.$table.on( 'click', '.save', this.saveEditor.bind(this) );\r\n        \r\n        this.$table.on( 'change', 'select[name=worker]', this.fetchWorkerHours.bind(this) );\r\n\r\n        // @TODO Refactor\r\n        this.$exportButton.click( function(e) {\r\n            var button = $(e.target),\r\n                $form = button.closest(\"form\"),\r\n                checkedApps = $(\".column-delete.app-check-column :checked\"),\r\n                type = $form.find(\"#app-export_type\");\r\n\r\n            if (button.is(\"#app-export-selected\") && checkedApps.length) {\r\n                checkedApps.each(function () {\r\n                    $form.append(\"<input type='hidden' name='app[]' value='\" + $(this).val() + \"' />\");\r\n                });\r\n                type.val(\"selected\");\r\n                return true;\r\n            } else if (button.is(\"#app-export-type\")) {\r\n                $form.append(\"<input type='hidden' name='status' value='\" + button.attr(\"data-type\") + \"' />\");\r\n                type.val(\"type\");\r\n                return true;\r\n            } else if (button.is(\"#app-export-all\")) {\r\n                type.val(\"all\");\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        $(\".app-change-status-btn\").click(function(e){\r\n            var button = $(this);\r\n            var selection = $(\"th.app-check-column input:checkbox:checked\");\r\n            // var data = { 'app[]' : []};\r\n            selection.each(function() {\r\n                // data['app[]'].push($(this).val());\r\n                button.after('<input type=\"hidden\" name=\"app[]\" value=\"'+$(this).val()+'\"/>');\r\n            });\r\n\r\n            return true;\r\n        });\r\n\r\n        $(\".info-button\").click(function(){\r\n            $(\".status-description\").toggle('fast');\r\n        });\r\n\r\n        function toggle_selected_export () {\r\n            var $sel = $(\"#the-list .check-column :checked\");\r\n            if ($sel.length) $(\"#app-export-selected\").show();\r\n            else $(\"#app-export-selected\").hide();\r\n        }\r\n\r\n        $(document).on(\"change\", \".check-column input, .app-column-cb input\", toggle_selected_export);\r\n        $(toggle_selected_export);\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Hide all active inline editors and show all rows in the table\r\n     */\r\n    AppointmentsList.prototype.removeActiveEditorForms = function() {\r\n        this.$table.find( '.inline-edit-row' ).hide();\r\n        $(\".app-tr\").show();\r\n    };\r\n\r\n\r\n    /**\r\n     * Show the inline editor form\r\n     *\r\n     * @param app_id Appointment ID\r\n     * @param callback Callback function to execute after success\r\n     */\r\n    AppointmentsList.prototype.showEditorForm = function( app_id, callback ) {\r\n        var data = {\r\n            action: 'inline_edit',\r\n            col_len: this.options.columns,\r\n            app_id: app_id,\r\n            nonce: this.options.nonces.addNew,\r\n            columns: this.options.columns\r\n        };\r\n\r\n        return $.post(ajaxurl, data, function (response) {\r\n                if ( response && response.error ) {\r\n                    alert(response.error);\r\n                }\r\n                else if (response && typeof callback === 'function' ) {\r\n                    callback.call( this, [ response.result ] );\r\n                    this.initDatepicker();\r\n                }\r\n                else {\r\n                    alert( strings.unexpectedError );\r\n                }\r\n            }.bind(this),\r\n            'json'\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Initializes datepickers\r\n     */\r\n    AppointmentsList.prototype.initDatepicker = function() {\r\n        $( '.datepicker' ).datepicker({\r\n            dateFormat: 'yy-mm-dd',\r\n            firstDay: AppointmentsDateSettings.weekStart\r\n        });\r\n    };\r\n    \r\n    /**\r\n    * Fetches the working hours of the selected provider with ajax\r\n    */\r\n    AppointmentsList.prototype.fetchWorkerHours = function(e) {\r\n        \r\n        var $select             = $( e.target ),\r\n            $worker_id          = $select.val(),            \r\n            $parent             = $select.parents( \".inline-edit-row\" ),\r\n            $app_id             = $parent.find( \"select[name=service]\" ).val(),\r\n            $location           = $parent.find( \"select[name=location]\" ),\r\n            $slots_list         = $parent.find( \"select[name=time]\" ),\r\n            $selected_slot      = $slots_list.val(),\r\n            $unknown_slot       = $slots_list.children('option:first'),\r\n            $spinner            = $parent.find( '.waiting' ),\r\n            data                = {};        \r\n\r\n        $spinner.show();\r\n\r\n        /**\r\n        * Set up ajax data\r\n        */\r\n        data.nonce          = this.options.nonces.editApp;\r\n        data.action         = 'inline_fetch_worker_slots';\r\n        data.worker_id      = $worker_id;\r\n        data.app_id         = $app_id;\r\n        data.selected_slot  = $selected_slot;\r\n\r\n        // @TODO: Check if date is set and include that too in ajax data\r\n\r\n        if ( typeof( $location ) != \"undefined\" ) {\r\n            data.location_id         = $location.val();\r\n        }\r\n\r\n        /**\r\n        * Handle ajax response\r\n        */\r\n        $.post(ajaxurl, data, function(response) {\r\n\r\n            $spinner.hide();\r\n\r\n            // When receiving an error message\r\n            if ( response && response.error ){\r\n                \r\n                var error_msg = $('<div />',{\r\n                    'class' : 'error'\r\n                }).html( response.error );\r\n\r\n                $select.after( error_msg );\r\n                error_msg.delay(10000).fadeOut('slow');\r\n\r\n                return;\r\n\r\n            } else if (response) {\r\n                // Received the new time slots for worker\r\n                 var slots = JSON.parse( response.message );\r\n\r\n                // Empty the old slots list and add the unknown option\r\n                $slots_list.empty().append( '<option value=\"' + $unknown_slot.val() + '\">' + $unknown_slot.text() + '</option>' );\r\n\r\n                // Add the new timeslots\r\n                for ( var key in slots ) {\r\n                    $slots_list.append( slots[key] );\r\n                }\r\n            } else {\r\n                alert( strings.unexpectedError );\r\n                return;\r\n            }\r\n\r\n\r\n        }.bind(this),'json');\r\n    }\r\n\r\n    AppointmentsList.prototype.saveEditor = function(e) {\r\n        var $button = $(e.target);\r\n        var target = $button.parents(\".inline-edit-row\");\r\n        var $spinner = target.find(\".waiting\");\r\n\r\n        $spinner.show();\r\n\r\n        var fields = [\r\n            'user',\r\n            'cname',\r\n            'email',\r\n            'phone',\r\n            'address',\r\n            'city',\r\n            'service',\r\n            'worker',\r\n            'price',\r\n            'date',\r\n            'time',\r\n            'note',\r\n            'status'\r\n        ];\r\n\r\n        var data = {};\r\n        $.map( fields, function( fieldName ) {\r\n            if ( 'cname' === fieldName ) {\r\n                data.name = target.find( '[name=\"' + fieldName + '\"]').val();\r\n            }\r\n            else {\r\n                data[fieldName] = target.find( '[name=\"' + fieldName + '\"]').val();\r\n            }\r\n        });\r\n\r\n        var app_id = $button.data('app-id');\r\n        var cancel_button = target.find('.cancel');\r\n        data.app_id = app_id;\r\n        data.resend = target.find('input[name=\"resend\"]').is(':checked') ? 1 : 0;\r\n        data.nonce = this.options.nonces.editApp;\r\n        data.action = 'inline_edit_save';\r\n        $(document).trigger('app-appointment-inline_edit-save_data', [data, target]);\r\n\r\n        $.post(ajaxurl, data, function(response) {\r\n            $spinner.hide();\r\n            if ( response && response.error ){\r\n                target.find(\".error\").html(response.error).show().delay(10000).fadeOut('slow');\r\n                return;\r\n            } else if (response) {\r\n                target.find(\".error\").html(response.message).show().delay(10000).fadeOut('slow');\r\n            } else {\r\n                alert( strings.unexpectedError );\r\n                return;\r\n            }\r\n\r\n            if (!(app_id && parseInt(app_id, 10)) && response && response.app_id) {\r\n                location.reload();\r\n            }\r\n            else {\r\n                // this.removeActiveEditorForms();\r\n            }\r\n\r\n            if ( response.reload ){\r\n                location.reload();\r\n            }\r\n            cancel_button[0].innerHTML = 'Close';\r\n        }.bind(this),'json');\r\n    };\r\n\r\n    /**\r\n     * Helper constructor function\r\n     *\r\n     * @param options\r\n     * @returns {AppointmentsList}\r\n     */\r\n    global.appointmentsList = function( options ) {\r\n        return new AppointmentsList( options );\r\n    };\r\n\r\n})( AppointmentsAdmin, Appi18n, jQuery );\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// admin-appointments-list.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4c834a842219c72e652e","AppointmentsAdmin = window.AppointmentsAdmin || {};\r\n( function( global, strings, $ ) {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param options\r\n     * @returns {AppointmentsList}\r\n     * @constructor\r\n     */\r\n    function AppointmentsList( options ) {\r\n        // Set default options array\r\n        var defaults = {\r\n            servicesPrice: []\r\n        };\r\n        this.options = $.extend( {}, defaults, options );\r\n\r\n        this.isEditing = false;\r\n\r\n        // Export button\r\n        this.$exportButton = $('.app-export_trigger');\r\n\r\n        // Add new appointment button\r\n        this.$addNew = $(\".add-new-h2\");\r\n        this.$addNewSpinner = $(\".add-new-waiting\");\r\n\r\n        // Edit single appointment\r\n        this.$editAppointment = $(\".app-inline-edit\");\r\n\r\n        // App list table\r\n        this.$table = $('table.appointments');\r\n\r\n        // Confirm removal of selected appointments\r\n        $(\"#delete_removed\").click( function(e) {\r\n            return confirm(strings.deleteRecordsConfirm);\r\n        });\r\n\r\n        // Show inline editor when add new button is clicked\r\n        this.$addNew.click( function() {\r\n            this.$addNewSpinner.show();\r\n            this.removeActiveEditorForms();\r\n            this.showEditorForm( 0, function( result ) {\r\n                this.$table.prepend(result);\r\n                this.$addNewSpinner.hide();\r\n            });\r\n        }.bind( this ) );\r\n\r\n        // Show inline editor when editing a single appointment\r\n        this.$editAppointment.click(function(e) {\r\n            var appId = $(e.target).data( 'app-id' );\r\n            var row = $('#app-' + appId );\r\n            var $spinner = row.find(\".waiting\");\r\n\r\n            $spinner.show();\r\n\r\n            this.removeActiveEditorForms();\r\n\r\n            this.showEditorForm( appId, function( result ) {\r\n                $spinner.hide();\r\n                row.hide();\r\n                row.after( result );\r\n            });\r\n        }.bind(this));\r\n\r\n        // Cancel edition in inline editor\r\n        this.$table.on( 'click', '.cancel', this.removeActiveEditorForms.bind(this) );\r\n\r\n        // Change service price as selection changes\r\n        this.$table.on( 'change', 'select[name=\"service\"]', function(e) {\r\n            var target = $(e.target);\r\n            var value = target.val();\r\n            if ( this.options.servicesPrice[ value ] ) {\r\n                target.parents(\".inline-edit-col\")\r\n                    .find( 'input[name=\"price\"]' )\r\n                    .val( this.options.servicesPrice[ value ] );\r\n            }\r\n        }.bind(this));\r\n\r\n        this.$table.on( 'click', '.save', this.saveEditor.bind(this) );\r\n        \r\n        this.$table.on( 'change', 'select[name=worker]', this.fetchWorkerHours.bind(this) );\r\n\r\n        // @TODO Refactor\r\n        this.$exportButton.click( function(e) {\r\n            var button = $(e.target),\r\n                $form = button.closest(\"form\"),\r\n                checkedApps = $(\".column-delete.app-check-column :checked\"),\r\n                type = $form.find(\"#app-export_type\");\r\n\r\n            if (button.is(\"#app-export-selected\") && checkedApps.length) {\r\n                checkedApps.each(function () {\r\n                    $form.append(\"<input type='hidden' name='app[]' value='\" + $(this).val() + \"' />\");\r\n                });\r\n                type.val(\"selected\");\r\n                return true;\r\n            } else if (button.is(\"#app-export-type\")) {\r\n                $form.append(\"<input type='hidden' name='status' value='\" + button.attr(\"data-type\") + \"' />\");\r\n                type.val(\"type\");\r\n                return true;\r\n            } else if (button.is(\"#app-export-all\")) {\r\n                type.val(\"all\");\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        $(\".app-change-status-btn\").click(function(e){\r\n            var button = $(this);\r\n            var selection = $(\"th.app-check-column input:checkbox:checked\");\r\n            // var data = { 'app[]' : []};\r\n            selection.each(function() {\r\n                // data['app[]'].push($(this).val());\r\n                button.after('<input type=\"hidden\" name=\"app[]\" value=\"'+$(this).val()+'\"/>');\r\n            });\r\n\r\n            return true;\r\n        });\r\n\r\n        $(\".info-button\").click(function(){\r\n            $(\".status-description\").toggle('fast');\r\n        });\r\n\r\n        function toggle_selected_export () {\r\n            var $sel = $(\"#the-list .check-column :checked\");\r\n            if ($sel.length) $(\"#app-export-selected\").show();\r\n            else $(\"#app-export-selected\").hide();\r\n        }\r\n\r\n        $(document).on(\"change\", \".check-column input, .app-column-cb input\", toggle_selected_export);\r\n        $(toggle_selected_export);\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Hide all active inline editors and show all rows in the table\r\n     */\r\n    AppointmentsList.prototype.removeActiveEditorForms = function() {\r\n        this.$table.find( '.inline-edit-row' ).hide();\r\n        $(\".app-tr\").show();\r\n    };\r\n\r\n\r\n    /**\r\n     * Show the inline editor form\r\n     *\r\n     * @param app_id Appointment ID\r\n     * @param callback Callback function to execute after success\r\n     */\r\n    AppointmentsList.prototype.showEditorForm = function( app_id, callback ) {\r\n        var data = {\r\n            action: 'inline_edit',\r\n            col_len: this.options.columns,\r\n            app_id: app_id,\r\n            nonce: this.options.nonces.addNew,\r\n            columns: this.options.columns\r\n        };\r\n\r\n        return $.post(ajaxurl, data, function (response) {\r\n                if ( response && response.error ) {\r\n                    alert(response.error);\r\n                }\r\n                else if (response && typeof callback === 'function' ) {\r\n                    callback.call( this, [ response.result ] );\r\n                    this.initDatepicker();\r\n                }\r\n                else {\r\n                    alert( strings.unexpectedError );\r\n                }\r\n            }.bind(this),\r\n            'json'\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Initializes datepickers\r\n     */\r\n    AppointmentsList.prototype.initDatepicker = function() {\r\n        $( '.datepicker' ).datepicker({\r\n            dateFormat: 'yy-mm-dd',\r\n            firstDay: AppointmentsDateSettings.weekStart\r\n        });\r\n    };\r\n    \r\n    /**\r\n    * Fetches the working hours of the selected provider with ajax\r\n    */\r\n    AppointmentsList.prototype.fetchWorkerHours = function(e) {\r\n        \r\n        var $select             = $( e.target ),\r\n            $worker_id          = $select.val(),            \r\n            $parent             = $select.parents( \".inline-edit-row\" ),\r\n            $app_id             = $parent.find( \"select[name=service]\" ).val(),\r\n            $location           = $parent.find( \"select[name=location]\" ),\r\n            $slots_list         = $parent.find( \"select[name=time]\" ),\r\n            $selected_slot      = $slots_list.val(),\r\n            $unknown_slot       = $slots_list.children('option:first'),\r\n            $spinner            = $parent.find( '.waiting' ),\r\n            data                = {};        \r\n\r\n        $spinner.show();\r\n\r\n        /**\r\n        * Set up ajax data\r\n        */\r\n        data.nonce          = this.options.nonces.editApp;\r\n        data.action         = 'inline_fetch_worker_slots';\r\n        data.worker_id      = $worker_id;\r\n        data.app_id         = $app_id;\r\n        data.selected_slot  = $selected_slot;\r\n\r\n        // @TODO: Check if date is set and include that too in ajax data\r\n\r\n        if ( typeof( $location ) != \"undefined\" ) {\r\n            data.location_id         = $location.val();\r\n        }\r\n\r\n        /**\r\n        * Handle ajax response\r\n        */\r\n        $.post(ajaxurl, data, function(response) {\r\n\r\n            $spinner.hide();\r\n\r\n            // When receiving an error message\r\n            if ( response && response.error ){\r\n                \r\n                var error_msg = $('<div />',{\r\n                    'class' : 'error'\r\n                }).html( response.error );\r\n\r\n                $select.after( error_msg );\r\n                error_msg.delay(10000).fadeOut('slow');\r\n\r\n                return;\r\n\r\n            } else if (response) {\r\n                // Received the new time slots for worker\r\n                 var slots = JSON.parse( response.message );\r\n\r\n                // Empty the old slots list and add the unknown option\r\n                $slots_list.empty().append( '<option value=\"' + $unknown_slot.val() + '\">' + $unknown_slot.text() + '</option>' );\r\n\r\n                // Add the new timeslots\r\n                for ( var key in slots ) {\r\n                    $slots_list.append( slots[key] );\r\n                }\r\n            } else {\r\n                alert( strings.unexpectedError );\r\n                return;\r\n            }\r\n\r\n\r\n        }.bind(this),'json');\r\n    }\r\n\r\n    AppointmentsList.prototype.saveEditor = function(e) {\r\n        var $button = $(e.target);\r\n        var target = $button.parents(\".inline-edit-row\");\r\n        var $spinner = target.find(\".waiting\");\r\n\r\n        $spinner.show();\r\n\r\n        var fields = [\r\n            'user',\r\n            'cname',\r\n            'email',\r\n            'phone',\r\n            'address',\r\n            'city',\r\n            'service',\r\n            'worker',\r\n            'price',\r\n            'date',\r\n            'time',\r\n            'note',\r\n            'status'\r\n        ];\r\n\r\n        var data = {};\r\n        $.map( fields, function( fieldName ) {\r\n            if ( 'cname' === fieldName ) {\r\n                data.name = target.find( '[name=\"' + fieldName + '\"]').val();\r\n            }\r\n            else {\r\n                data[fieldName] = target.find( '[name=\"' + fieldName + '\"]').val();\r\n            }\r\n        });\r\n\r\n        var app_id = $button.data('app-id');\r\n        var cancel_button = target.find('.cancel');\r\n        data.app_id = app_id;\r\n        data.resend = target.find('input[name=\"resend\"]').is(':checked') ? 1 : 0;\r\n        data.nonce = this.options.nonces.editApp;\r\n        data.action = 'inline_edit_save';\r\n        $(document).trigger('app-appointment-inline_edit-save_data', [data, target]);\r\n\r\n        $.post(ajaxurl, data, function(response) {\r\n            $spinner.hide();\r\n            if ( response && response.error ){\r\n                target.find(\".error\").html(response.error).show().delay(10000).fadeOut('slow');\r\n                return;\r\n            } else if (response) {\r\n                target.find(\".error\").html(response.message).show().delay(10000).fadeOut('slow');\r\n            } else {\r\n                alert( strings.unexpectedError );\r\n                return;\r\n            }\r\n\r\n            if (!(app_id && parseInt(app_id, 10)) && response && response.app_id) {\r\n                location.reload();\r\n            }\r\n            else {\r\n                // this.removeActiveEditorForms();\r\n            }\r\n\r\n            if ( response.reload ){\r\n                location.reload();\r\n            }\r\n            cancel_button[0].innerHTML = 'Close';\r\n        }.bind(this),'json');\r\n    };\r\n\r\n    /**\r\n     * Helper constructor function\r\n     *\r\n     * @param options\r\n     * @returns {AppointmentsList}\r\n     */\r\n    global.appointmentsList = function( options ) {\r\n        return new AppointmentsList( options );\r\n    };\r\n\r\n})( AppointmentsAdmin, Appi18n, jQuery );\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./_src/admin/js/admin-appointments-list.dev.js\n// module id = 0\n// module chunks = 5"],"sourceRoot":""}